---
import { getCollection, type CollectionEntry } from 'astro:content';
import { components } from '../components/componentMap';
import BaseLayout from '../layouts/BaseLayout.astro';
import type { GetStaticPaths } from "astro";

// This is the new, simplified logic
export const getStaticPaths = (async () => {
  const pages = await getCollection('pages');

  return pages.map((entry) => {
    // entry.slug will be "en/index", "es/about", etc.
    // Astro's i18n router knows how to handle this structure perfectly.
    // We just need to remove "index" for root pages.
    const slug = entry.slug.endsWith('/index')
      ? entry.slug.slice(0, -'/index'.length)
      : entry.slug;

    return {
      // The `slug` parameter here will match the URL structure, e.g., "en/about".
      params: { slug },
      props: { entry },
    };
  });
}) satisfies GetStaticPaths;

// The entry contains the full data for the correct language
const { entry } = Astro.props as { entry: CollectionEntry<'pages'> };
const { data: pageData } = entry;
const { meta, content } = pageData;
---

<BaseLayout title={meta.title} description={meta.description}>
  <main>
    {content.map(block => {
      const Component = components[block.component] ?? components.fallback;

      return <Component {...block} />;
    })}
  </main>
</BaseLayout>
